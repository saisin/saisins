// ver.2.1[2015/7/15]
integer PART_EMISSIVE_MASK;
integer PART_INTERP_COLOR_MASK;
integer PART_INTERP_SCALE_MASK;
integer PART_WIND_MASK;
integer PART_BOUNCE_MASK;
integer PART_FOLLOW_SRC_MASK;
integer PART_FOLLOW_VELOCITY_MASK;
integer PART_TARGET_LINEAR_MASK;
integer PART_TARGET_POS_MASK;
integer PART_PATTERN;
float PART_START_ALPHA;
float PART_END_ALPHA;
vector PART_START_COLOR;
vector PART_END_COLOR;
vector PART_START_SCALE;
vector PART_END_SCALE;
float SRC_MAX_AGE;
float PART_MAX_AGE;
vector PART_ACCEL;
float PART_ANGLE_BEGIN;
float PART_ANGLE_END;
integer PART_BURST_COUNT;
float PART_BURST_RADIUS;
float PART_BURST_RATE;
float PART_BURST_SPEED_MIN;
float PART_BURST_SPEED_MAX;
vector PART_OMEGA;
string PART_TEXTURE;
key PART_TARGET_KEY;
integer PART_BLEND_FUNC_SOURCE;
integer PART_BLEND_FUNC_DEST;
integer INT_PARTICLE=1978532;
key target_key;

default{
state_entry(){}
link_message(integer sender,integer num,string msg,key id)
{
if(num!=INT_PARTICLE){return;}
target_key=id;
if(msg=="PART_START"){
PART_EMISSIVE_MASK=PSYS_PART_EMISSIVE_MASK;
PART_INTERP_COLOR_MASK=PSYS_PART_INTERP_COLOR_MASK;
PART_INTERP_SCALE_MASK=PSYS_PART_INTERP_SCALE_MASK;
PART_WIND_MASK=0;
PART_BOUNCE_MASK=0;
PART_FOLLOW_SRC_MASK=0;
PART_FOLLOW_VELOCITY_MASK=PSYS_PART_FOLLOW_VELOCITY_MASK;
PART_TARGET_LINEAR_MASK=PSYS_PART_TARGET_LINEAR_MASK;
PART_TARGET_POS_MASK=0;//PSYS_PART_TARGET_POS_MASK;

PART_PATTERN = PSYS_SRC_PATTERN_EXPLODE;
PART_START_ALPHA = 1.0;
PART_END_ALPHA = 1.0;
PART_START_COLOR = <1,0.7,1>;
PART_END_COLOR = <1,0.5,1>;
PART_START_SCALE = <0.07,1,0>;
PART_END_SCALE = <0.07,0.5,0>;
SRC_MAX_AGE = 3;
PART_MAX_AGE = 0.3;
PART_ACCEL = <0,0,0>;
PART_ANGLE_BEGIN = 0;
PART_ANGLE_END = PI;
PART_BURST_COUNT = 30;
PART_BURST_RADIUS = 0;
PART_BURST_RATE = 0.0;
PART_BURST_SPEED_MIN = 3;
PART_BURST_SPEED_MAX = 3;
PART_OMEGA = <0.0,0.0,0.0>;
PART_TEXTURE = NULL_KEY;
PART_TARGET_KEY = target_key;
PART_BLEND_FUNC_SOURCE=PSYS_PART_BF_SOURCE_ALPHA;
PART_BLEND_FUNC_DEST=PSYS_PART_BF_ONE_MINUS_SOURCE_ALPHA;

llParticleSystem(
[PSYS_PART_FLAGS , PART_BOUNCE_MASK |
PART_EMISSIVE_MASK |
PART_FOLLOW_SRC_MASK |
PART_FOLLOW_VELOCITY_MASK |
PART_INTERP_COLOR_MASK |
PART_INTERP_SCALE_MASK |
PART_TARGET_LINEAR_MASK |
PART_TARGET_POS_MASK |
PART_WIND_MASK
,PSYS_SRC_PATTERN, PART_PATTERN
,PSYS_PART_START_ALPHA, PART_START_ALPHA 
,PSYS_PART_END_ALPHA, PART_END_ALPHA 
,PSYS_PART_START_COLOR, PART_START_COLOR
,PSYS_PART_END_COLOR, PART_END_COLOR 
,PSYS_PART_START_SCALE, PART_START_SCALE 
,PSYS_PART_END_SCALE, PART_END_SCALE 
,PSYS_SRC_MAX_AGE, SRC_MAX_AGE
,PSYS_PART_MAX_AGE, PART_MAX_AGE
,PSYS_SRC_ACCEL, PART_ACCEL 
,PSYS_SRC_ANGLE_BEGIN, PART_ANGLE_BEGIN
,PSYS_SRC_ANGLE_END, PART_ANGLE_END 
,PSYS_SRC_BURST_PART_COUNT, PART_BURST_COUNT 
,PSYS_SRC_BURST_RADIUS, PART_BURST_RADIUS 
,PSYS_SRC_BURST_RATE, PART_BURST_RATE 
,PSYS_SRC_BURST_SPEED_MIN, PART_BURST_SPEED_MIN 
,PSYS_SRC_BURST_SPEED_MAX, PART_BURST_SPEED_MAX 
,PSYS_SRC_OMEGA, PART_OMEGA 
,PSYS_SRC_TEXTURE, PART_TEXTURE 
,PSYS_SRC_TARGET_KEY, PART_TARGET_KEY
,PSYS_PART_BLEND_FUNC_SOURCE,PART_BLEND_FUNC_SOURCE
,PSYS_PART_BLEND_FUNC_DEST,PART_BLEND_FUNC_DEST
]);
llSleep(0.5);
llSetTimerEvent(3);
}
}
timer(){
llSetTimerEvent(0);
llParticleSystem([]);
}
}